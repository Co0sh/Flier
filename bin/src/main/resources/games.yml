### Games
#
# In this file you can specify different types, places and rules of your games.
# Here is an example Game for you to use and modify.
# A list of all Game types and their configurations can be found in the documentation.
#

default:
  name: '$custom.defGame'
  type: teamDeathMatch                 # type of the game
  points_to_win: 5                     # points required to win the game
  rounds: true                         # whenever the game is continuous or uses rounds
  start_delay: 600                     # how long to wait before starting the game
  respawn_delay: 300                   # how long to wait before respawning players
  max_players: 6                       # maximum amount of players allowed in the game
  min_players: 2                       # minimum amount of players before the game starts
  locking: true                        # players can't join an already running game
  teams:                               # list of teams
    blue:
      name: '$custom.blue'             # name of the team
      spawns: blue_spawn               # spawn locations for the team (defined in arenas.yml)
      color: blue                      # color of the team
    red:
      name: '$custom.red'
      spawns: red_spawn
      color: red
  money:                               # money settings for the Game
    enabled: true                      # whenever the money system is enabled at all
    enemy_hit: 1                       # amount of money players get for different actions
    enemy_kill: 5                      #
    friendly_kill: -2                  #
    by_friendly_death: 2               #
    suicide: -3                        #
  waiting_room: room                   # location of the waiting room as in arenas.yml
  leave_blocks: leave                  # locations of leave blocks as in arenas.yml
  center: center                       # center of the map
  radius: 1000                         # the radius defining map borders
  viable_arenas:                       # list of arenas this game can use
  - default
  bonuses:                             # list of Bonuses in this Game
  - money
  - fix
  - heal
  effects:                             # list of Effects in this Game
  - click
  - shoot
  - hit
  - get_hit
  - explode_particle
  - explode_sound
  - spawn_particle_blue
  - spawn_particle_red
  - spawn_sound
  - chicken_sound
  - sheep_sound
  - engine_smoke
  - engine_glow
  - ground_glow
  default_kit:                         # list of item sets for default kit
  - balanced
  respawn_action: combine              # what happens with items after respawn (see docs)
  buttons:                             # list of buttons with item sets
    rocket_button:
      buy_cost: 15                     # cost of buying this item set
      on_buy:                          # items to apply when buying
        item_set: rocket               # ID of the item set
        add_type: increase             # how it's added, see docs
        conflict_action: skip          # what happens, when there already is something of that category
      sell_cost: -15                   # negative, because we're giving the money back
      on_sell:                         # items to apply when selling
        item_set: rocket               # it's the same as above
        add_type: decrease             # but we're decreasing instead of increasing
        conflict_action: skip
      blocks: rocket_button            # locations of the block to click
    launcher_button:
      buy_cost: 10
      on_buy:
        item_set: launcher
        add_type: increase
        conflict_action: skip
      sell_cost: -10
      on_sell:
        item_set: launcher
        add_type: decrease
        conflict_action: skip
      blocks: launcher_button
    repair_button:
      buy_cost: 20
      on_buy:
        item_set: repair
        add_type: increase
        conflict_action: skip
      sell_cost: -20
      on_sell:
        item_set: repair
        add_type: decrease
        conflict_action: skip
      blocks: repair_button
    bomb_button:
      buy_cost: 5
      on_buy:
        item_set: bomb
        add_type: increase
        conflict_action: skip
      sell_cost: -5
      on_sell:
        item_set: bomb
        add_type: decrease
        conflict_action: skip
      blocks: bomb_button
    fast_button:
      on_buy:
        item_set: fast
        add_type: fill
        conflict_action: replace
        saving: true
      blocks: fast_button
    balanced_button:
      on_buy:
        item_set: balanced
        add_type: fill
        conflict_action: replace
        saving: true
      blocks: balanced_button
    strong_button:
      on_buy:
        item_set: strong
        add_type: fill
        conflict_action: replace
        saving: true
      blocks: strong_button
    upgrade_ammo:
      unlock_cost: 30
      on_unlock:
        item_set: upgrade_ammo
        add_type: fill
        conflict_action: replace
        saving: true
      on_buy:
        item_set: upgrade_ammo
        add_type: fill
        conflict_action: replace
        saving: true
      blocks: upgrade_ammo
    upgrade_wings:
      unlock_cost: 30
      on_unlock:
        item_set: upgrade_wings
        add_type: fill
        conflict_action: replace
        saving: true
      on_buy:
        item_set: upgrade_wings
        add_type: fill
        conflict_action: replace
        saving: true
      blocks: upgrade_wings
    upgrade_engine:
      unlock_cost: 30
      on_unlock:
        item_set: upgrade_engine
        add_type: fill
        conflict_action: replace
        saving: true
      on_buy:
        item_set: upgrade_engine
        add_type: fill
        conflict_action: replace
        saving: true
      blocks: upgrade_engine
    upgrade_damage:
      unlock_cost: 30
      on_unlock:
        item_set: upgrade_damage
        add_type: fill
        conflict_action: replace
        saving: true
      on_buy:
        item_set: upgrade_damage
        add_type: fill
        conflict_action: replace
        saving: true
      blocks: upgrade_damage
